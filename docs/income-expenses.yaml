openapi: 3.0.0
info:
  title: Income Expense API
  version: 1.0.0
  description: API for managing income and expenses.
tags:
  - name: Income Expenses
    description: Operations related to income and expenses
paths:
  /income-expenses:
    post:
      tags:
        - Income Expenses
      summary: Create a new income or expense
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  enum: [Salary, Bonus, Rent, Mortgage, Non Essentials, Property]
                  example: "Salary"
                subcategory:
                  type: string
                  enum: [Employment, Property]
                  example: "Employment"
                source:
                  type: string
                  example: "Company Salary"
                bookvalue:
                  type: number
                  format: float
                  example: 3000.00
                currency:
                  type: string
                  enum: [GBP]
                  example: "GBP"
                income_or_expense:
                  type: string
                  enum: [Income, Expense]
                  example: "Income"
      responses:
        '201':
          description: Income or expense created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  category:
                    type: string
                    example: "Salary"
                  subcategory:
                    type: string
                    example: "Employment"
                  source:
                    type: string
                    example: "Company Salary"
                  bookvalue:
                    type: number
                    format: float
                    example: 3000.00
                  currency:
                    type: string
                    example: "GBP"
                  income_or_expense:
                    type: string
                    example: "Income"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Category is required"

    get:
      tags:
        - Income Expenses
      summary: Retrieve all income and expenses
      responses:
        '200':
          description: A list of income and expenses
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    category:
                      type: string
                      example: "Salary"
                    subcategory:
                      type: string
                      example: "Employment"
                    source:
                      type: string
                      example: "Company Salary"
                    bookvalue:
                      type: number
                      format: float
                      example: 3000.00
                    currency:
                      type: string
                      example: "GBP"
                    income_or_expense:
                      type: string
                      example: "Income"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /income-expenses/{id}:
    get:
      tags:
        - Income Expenses
      summary: Retrieve a specific income or expense by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the income or expense to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Income or expense found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  category:
                    type: string
                    example: "Salary"
                  subcategory:
                    type: string
                    example: "Employment"
                  source:
                    type: string
                    example: "Company Salary"
                  bookvalue:
                    type: number
                    format: float
                    example: 3000.00
                  currency:
                    type: string
                    example: "GBP"
                  income_or_expense:
                    type: string
                    example: "Income"
        '404':
          description: Income or expense not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "IncomeExpense not found"

    put:
      tags:
        - Income Expenses
      summary: Update an income or expense by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the income or expense to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  enum: [Salary, Bonus, Rent, Mortgage, Non Essentials, Property]
                  example: "Salary"
                subcategory:
                  type: string
                  enum: [Employment, Property]
                  example: "Employment"
                source:
                  type: string
                  example: "Company Salary"
                bookvalue:
                  type: number
                  format: float
                  example: 3000.00
                currency:
                  type: string
                  enum: [GBP]
                  example: "GBP"
                income_or_expense:
                  type: string
                  enum: [Income, Expense]
                  example: "Income"
      responses:
        '200':
          description: Income or expense updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  category:
                    type: string
                    example: "Salary"
                  subcategory:
                    type: string
                    example: "Employment"
                  source:
                    type: string
                    example: "Company Salary"
                  bookvalue:
                    type: number
                    format: float
                    example: 3000.00
                  currency:
                    type: string
                    example: "GBP"
                  income_or_expense:
                    type: string
                    example: "Income"
        '404':
          description: Income or expense not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "IncomeExpense not found"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Category is required"

    delete:
      tags:
        - Income Expenses
      summary: Delete an income or expense by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the income or expense to delete
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Income or expense deleted successfully
        '404':
          description: Income or expense not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "IncomeExpense not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error" 