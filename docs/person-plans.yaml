openapi: 3.0.0
info:
  title: Person Plan API
  version: 1.0.0
  description: API for managing person plans.
tags:
  - name: Person Plans
    description: Operations related to person plans
paths:
  /person-plans:
    post:
      tags:
        - Person Plans
      summary: Create a new person plan
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                relationship:
                  type: string
                  enum: [Owner, Adviser, Other Member]
                  example: "Owner"
                plan_id:
                  type: integer
                  example: 1
                person_id:
                  type: integer
                  example: 1
      responses:
        '201':
          description: Person plan created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  relationship:
                    type: string
                    example: "Owner"
                  plan_id:
                    type: integer
                    example: 1
                  person_id:
                    type: integer
                    example: 1
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Relationship is required"

    get:
      tags:
        - Person Plans
      summary: Retrieve all person plans
      responses:
        '200':
          description: A list of person plans
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    relationship:
                      type: string
                      example: "Owner"
                    plan_id:
                      type: integer
                      example: 1
                    person_id:
                      type: integer
                      example: 1
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error"

  /person-plans/{id}:
    get:
      tags:
        - Person Plans
      summary: Retrieve a specific person plan by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the person plan to retrieve
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Person plan found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  relationship:
                    type: string
                    example: "Owner"
                  plan_id:
                    type: integer
                    example: 1
                  person_id:
                    type: integer
                    example: 1
        '404':
          description: Person plan not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "PersonPlan not found"

    put:
      tags:
        - Person Plans
      summary: Update a person plan by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the person plan to update
          schema:
            type: integer
            example: 1
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                relationship:
                  type: string
                  enum: [Owner, Adviser, Other Member]
                  example: "Owner"
                plan_id:
                  type: integer
                  example: 1
                person_id:
                  type: integer
                  example: 1
      responses:
        '200':
          description: Person plan updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  relationship:
                    type: string
                    example: "Owner"
                  plan_id:
                    type: integer
                    example: 1
                  person_id:
                    type: integer
                    example: 1
        '404':
          description: Person plan not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "PersonPlan not found"
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Relationship is required"

    delete:
      tags:
        - Person Plans
      summary: Delete a person plan by ID
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the person plan to delete
          schema:
            type: integer
            example: 1
      responses:
        '204':
          description: Person plan deleted successfully
        '404':
          description: Person plan not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "PersonPlan not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Internal server error" 